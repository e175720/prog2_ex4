import java.io.*;

public class Foo {
  public static void main(String args[]) {

    if (args.length == 0) {
      System.err.println("Input Filename:");
      System.exit(1);
    }

    try {
      BufferedReader in = new BufferedReader(new FileReader(args[0]));
      String s;
      String[] lines;
      String[][] factor = new String[5][8];
      int i=0;
      int j=0;

      while ((s = in.readLine()) != null) {
        lines[i] = s;
        i++;
      }
      lines[1]=
      for (int i = 0; i < factor.length; i++) {
            for (int j = 0; j < factor[i].length; j++) {
              factor[i][j] = "~";
            }
          }
      in.close();
    } catch (IOException e) {
        System.err.println(e);
        System.exit(1);
    }
  }
}

まず、map.txtファイルを読んで、文字列に保管する。
最初の列と2番目の列をint変数に保存する。
３行目からこの文字列をsplitして、各文字を　charの２次元アレイに#->0 空いている->1 G-> -1 に対応する


/*演習4_2: プレイヤークラスを設計（not実装）してみよう*/


/*
初期位置の設定。
マップの左上(0, 0)から右に2、下に1進んだ位置を初期位置にする。
プレイヤー位置を1、それ以外をすべて0に置き換えたプレイヤー用マップを用意。

0000000
0010000
0000000
0000000
0000000
0000000
0000000
0000000

元のマップの数値とプレイヤー位置の数値(プレイヤーの数値は常に1)をかける。
かけた数値が0ならそこは行き止まり。1なら移動可能な場所。-1ならゴールに到達。
例えば、初期位置から左に移動する場合、元マップは空白なので数値は１。1*1=1なので、出る値は1。よってその場所は移動可能な場所。

移動したら、現在位置の数字を変更する。
例えば、　2 1 -> 1 1

一歩ずつ移動するから、縦か横の数字を1、足す or 減らす。

*/